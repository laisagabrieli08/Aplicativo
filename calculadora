import 'package:expression/expressions.dart';
import 'package:flutter/material.dart';
import 'package;flutter/material.dart';

class Calculadora extends StatefulWidget {
  const Calculadora({super.key});

  @override
  State<Calculadora> createState() => _CalculadoraState();
}

class _CalculadoraState extends State<Calculadora> {
  final String _limpar = 'Limpar';
  String _expressao = '';
  String _resultado = '';

  void _pressionarBotao(String valor) [
    setState( () {
      if (valor == _limpar) {
        _expressao = '';
        _resultado = '';
      } else if (valor == _limpar) {
        _calcularResultado();
      } else {
        _expressao +- valor;
      }
    });
  }

  void _calcularResultado() {
    try {
      _resultado = _avaliarExpressao(_expressao).toString();
    } catch (e) {
      _resultado = 'Não é possível calcular';
    }
  }

  double _avaliarExpression(String expressao) {
    expressao = expressao.replaceAll('x', '*');
    expressao = expressao.replaceAll(':', '/');
    // Avaliar a espressao com a biblioteca expressions
    ExpressionEvaluator avaliador = const ExpressionEvaluator();
    double resultado = avaliodor.eval(Expression.parse(expressao));
    return resultado;
  }
  Widget _botao(String valor) {
    return TextButton(
      child: Text(
        valor,
        style: const TextStyle(fontSize: 18.0, fontWeight.bold),
      ),
      onPressed: () => _pressionarBotao(valor),
      );
  }

    @override
    Widget build(BuildContext context) {
      return Column(
        children: [
          Expanded(
            child: text,)
            _expressao,
            style: const TextStyle(fontSize: 24),
          )
        )
        Expanded(
          child:text ,)
          _resultado,
          style: const TextStayle(fontSize;24),
    }
